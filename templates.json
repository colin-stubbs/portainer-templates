{
  "version": "3",
  "templates": [
    {
      "id": 1,
      "type": 3,
      "name": "watchtower",
      "title": "Watchtower",
      "description": "Automatically update running Docker containers",
      "note": "TBC",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/watchtower.png",
      "categories": ["edge","System","Tools"],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/watchtower.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "watchtower"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "description": "Timezone",
          "default": "Australia/Brisbane"
        },
        {
          "name": "WATCHTOWER_CLEANUP",
          "label": "WATCHTOWER_CLEANUP",
          "description": "Removes old images after updating.",
          "default": "true"
        },
        {
          "name": "WATCHTOWER_LABEL_ENABLE",
          "label": "WATCHTOWER_LABEL_ENABLE",
          "description": "Monitor and update containers that have a com.centurylinklabs.watchtower.enable label set to true.",
          "default": "true"
        },
        {
          "name": "WATCHTOWER_POLL_INTERVAL",
          "label": "WATCHTOWER_POLL_INTERVAL",
          "description": "Poll interval (in seconds). This value controls how frequently watchtower will poll for new images",
          "default": "86400"
        },
        {
          "name": "WATCHTOWER_HTTP_API_UPDATE",
          "label": "WATCHTOWER_HTTP_API_UPDATE",
          "description": "Runs Watchtower in HTTP API mode, only allowing image updates to be triggered by an HTTP request.",
          "default": "false"
        },
        {
          "name": "WATCHTOWER_HTTP_API_TOKEN",
          "label": "WATCHTOWER_HTTP_API_TOKEN",
          "description": "Sets an authentication token to HTTP API requests. Can also reference a file, in which case the contents of the file are used.",
          "default": "CHANGE_ME"
        },
        {
          "name": "WATCHTOWER_HTTP_API_PERIODIC_POLLS",
          "label": "WATCHTOWER_HTTP_API_PERIODIC_POLLS",
          "description": "Keep running periodic updates if the HTTP API mode is enabled, otherwise the HTTP API would prevent periodic polls.",
          "default": "true"
        },
        {
          "name": "WATCHTOWER_ROLLING_RESTART",
          "label": "WATCHTOWER_ROLLING_RESTART",
          "description": "Restart one image at time instead of stopping and starting all at once.",
          "default": "true"
        },
        {
          "name": "WATCHTOWER_NO_STARTUP_MESSAGE",
          "label": "WATCHTOWER_NO_STARTUP_MESSAGE",
          "description": "Do not send a message after watchtower started. Otherwise there will be an info-level notification.",
          "default": "true"
        },
        {
          "name": "WATCHTOWER_NOTIFICATIONS_LEVEL",
          "label": "WATCHTOWER_NOTIFICATIONS_LEVEL",
          "description": "Controls the log level which is used for the notifications. If omitted, the default log level is info. Possible values are: panic, fatal, error, warn, info, debug or trace.",
          "default": "info"
        },
        {
          "name": "WATCHTOWER_NOTIFICATION_REPORT",
          "label": "WATCHTOWER_NOTIFICATION_REPORT",
          "description": "Use the session report as the notification template data.",
          "default": "true"
        },
        {
          "name": "WATCHTOWER_NOTIFICATION_URL",
          "label": "WATCHTOWER_NOTIFICATION_URL",
          "description": "The shoutrrr service URL to be used. This option can also reference a file, in which case the contents of the file are used.",
          "default": ""
        },
        {
          "name": "WATCHTOWER_NOTIFICATION_TEMPLATE",
          "label": "WATCHTOWER_NOTIFICATION_TEMPLATE",
          "description": "The template used for notifications.",
          "default": "\n{{- if .Report -}}\n    {{- with .Report -}}\n  {{len .Scanned}} Scanned, {{len .Updated}} Updated, {{len .Failed}} Failed\n        {{- range .Updated}}\n  - {{.Name}} ({{.ImageName}}): {{.CurrentImageID.ShortID}} updated to {{.LatestImageID.ShortID}}\n        {{- end -}}\n        {{- range .Fresh}}\n  - {{.Name}} ({{.ImageName}}): {{.State}}\n      {{- end -}}\n      {{- range .Skipped}}\n  - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}\n      {{- end -}}\n      {{- range .Failed}}\n  - {{.Name}} ({{.ImageName}}): {{.State}}: {{.Error}}\n      {{- end -}}\n    {{- end -}}\n  {{- else -}}\n    {{range .Entries -}}{{.Message}}{{\"\n\"}}{{- end -}}\n  {{- end -}}\n"
        }
      ]
    },
    {
      "id": 2,
      "type": 3,
      "title": "cloudflared-tunnel",
      "description": "cloudflared tunnel",
      "categories": [
        "edge",
        "Cloud",
        "Network"
      ],
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/cloudflare.png",
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/cloudflared-tunnel.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "TUNNEL_TOKEN",
          "label": "Tunnel Token",
          "description": "The token for the cloudflared tunnel",
          "default": "CHANGE_ME"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 3,
      "type": 3,
      "title": "cloudflared-proxy-doh",
      "description": "cloudflared DNS over HTTPS proxy server",
      "categories": ["edge","Cloud","Network","DNS"],
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/cloudflare.png",
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/cloudflared-proxy-doh.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "TUNNEL_DNS_ADDRESS",
          "label": "Tunnel DNS Address",
          "description": "Listen address for the DNS over HTTPS proxy server",
          "default": "0.0.0.0"
        },
        {
          "name": "TUNNEL_DNS_PORT",
          "label": "Tunnel DNS Port",
          "description": "Listen port for the DNS over HTTPS proxy server",
          "default": "53"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
		{
      "id": 4,
      "type": 3,
			"name": "traefik",
			"title": "Traefik",
			"description": "Cloud-Native Networking Stack That Just Works.",
			"image": "traefik:latest",
			"logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/traefik.png",
      "note": "Configure environment variables as per <a href=\"https://doc.traefik.io/traefik/reference/static-configuration/env/\">https://doc.traefik.io/traefik/reference/static-configuration/env/</a>.",
			"categories": [
        "edge",
        "Web",
				"Proxy",
				"Security",
				"Tools"
			],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/traefik.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "traefik"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "TRAEFIK_PROVIDERS_DOCKER",
          "label": "TRAEFIK_PROVIDERS_DOCKER",
          "description": "Enable Docker backend with default settings.",
          "default": "true"
        },
        {
          "name": "TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT",
          "label": "TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT",
          "description": "Expose containers by default. If set traefik.enable=true should be set as a label on the container.",
          "default": "false"
        },
        {
          "name": "TRAEFIK_API_INSECURE",
          "label": "TRAEFIK_API_INSECURE",
          "description": "Activate API directly on the entryPoint named traefik.",
          "default": "false"
        },
        {
          "name": "TRAEFIK_API",
          "label": "TRAEFIK_API",
          "description": "Activate API.",
          "default": "false"
        },
        {
          "name": "TRAEFIK_API_DASHBOARD",
          "label": "TRAEFIK_API_DASHBOARD",
          "description": "Activate dashboard via API.",
          "default": "false"
        },
        {
          "name": "TRAEFIK_ACCESSLOG",
          "label": "TRAEFIK_ACCESSLOG",
          "description": "Enable access logging.",
          "default": "false"
        },
        {
          "name": "TRAEFIK_ACCESSLOG_ADDINTERNALS",
          "label": "TRAEFIK_ACCESSLOG_ADDINTERNALS",
          "description": "Enables access log for internal services (ping, dashboard, etc...).",
          "default": "false"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
		},
    {
      "id": 5,
      "type": 3,
      "name": "postgres",
      "title": "PostgreSQL",
      "description": "PostgreSQL is a powerful, open source object-relational database system with over 35 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.",
      "note": "TBC",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/postgres.png",
      "categories": [
        "Database"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/postgres.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "postgres"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Australia/Brisbane"
        },
        {
          "name": "POSTGRES_DB",
          "label": "POSTGRES_DB",
          "default": "postgres"
        },
        {
          "name": "POSTGRES_USER",
          "label": "POSTGRES_USER",
          "default": "postgres"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "POSTGRES_PASSWORD",
          "default": "P@55w0rd"
        },
        {
          "name": "POSTGRES_PORT",
          "label": "POSTGRES_PORT",
          "default": "5432"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5,
      "type": 3,
      "name": "pgadmin",
      "title": "PostgreSQL Admin",
      "description": "pgAdmin4 web admin interface.",
      "note": "TBC",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/postgres.png",
      "categories": [
        "Database",
        "Web",
        "Tools"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/pgadmin.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "pgadmin"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "PGADMIN_DEFAULT_EMAIL",
          "label": "PGADMIN_DEFAULT_EMAIL",
          "default": "CHANGE@ME.tld"
        },
        {
          "name": "PGADMIN_DEFAULT_PASSWORD",
          "label": "PGADMIN_DEFAULT_PASSWORD",
          "default": "CHANGE_ME"
        },
        {
          "name": "PGADMIN_DISABLE_POSTFIX",
          "label": "PGADMIN_DISABLE_POSTFIX",
          "default": "True"
        },
        {
          "name": "PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION",
          "label": "PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION",
          "default": "True"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 6,
      "type": 3,
      "name": "mariadb",
      "title": "MariaDB",
      "description": "MariaDB",
      "note": "TBC",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/mariadb.svg",
      "categories": [
        "Database"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/mariadb.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "mariadb"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "MARIADB_ROOT_PASSWORD",
          "label": "MARIADB_ROOT_PASSWORD",
          "default": "CHANGE_ME"
        },
        {
          "name": "MARIADB_DATABASE",
          "label": "MARIADB_DATABASE",
          "default": "mariadb"
        },
        {
          "name": "MARIADB_USER",
          "label": "MARIADB_USER",
          "default": "CHANGE_ME"
        },
        {
          "name": "MARIADB_PASSWORD",
          "label": "MARIADB_PASSWORD",
          "default": "CHANGE_ME"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 7,
      "type": 3,
      "name": "adminer",
      "title": "Adminer",
      "description": "Graphical web admin interface for various databases including MySQL/MariaDB, PostgreSQL, SQLite, SimpleDB, Elasticsearch and others.",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/adminer.svg",
      "categories": [
        "Database",
        "Web",
        "Tools"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/adminer.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "adminer"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "ADMINER_PLUGINS",
          "label": "ADMINER_PLUGINS"
        },
        {
          "name": "ADMINER_DESIGN",
          "label": "ADMINER_DESIGN",
          "default": "adminer-dark"
        },
        {
          "name": "ADMINER_DEFAULT_SERVER",
          "label": "ADMINER_DEFAULT_SERVER"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 8,
      "type": 3,
      "name": "opcs",
      "title": "1Password Connect Server",
      "description": "Securely access your 1Password items and vaults in your company's apps and cloud infrastructure using a private REST API",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/1password.png",
      "categories": [
        "Security",
        "Web",
        "Tools",
        "API"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/opcs.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "adminer"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5000,
      "type": 3,
      "name": "homepage",
      "title": "Homepage",
      "description": "A modern (fully static, fast), secure (fully proxied), highly customizable application dashboard with integrations for more than 25 services and translations for over 15 languages. Easily configured via YAML files (or discovery via docker labels).",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/homepage.png",
      "categories": [
        "Tools",
        "Network",
        "Web"
      ],
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "homepage"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "PGID",
          "label": "PGID",
          "default": "1000"
        },
        {
          "name": "PUID",
          "label": "PUID",
          "default": "1000"
        },
        {
          "name": "HOMEPAGE_ALLOWED_HOSTS",
          "label": "HOMEPAGE_ALLOWED_HOSTS",
          "default": "homepage.localhost"
        }
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/homepage.yml"
      },
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5004,
      "type": 3,
      "name": "cyberchef",
      "title": "CyberChef",
      "description": "A Cyber Swiss Army Knife",
      "categories": [
        "edge",
        "Web",
        "Productivity",
        "Tools"
      ],
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/gchq.jpeg",
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/cyberchef.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "cyberchef"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5005,
      "type": 3,
      "name": "excalidraw",
      "title": "Excalidraw",
      "description": "Virtual whiteboard for sketching hand-drawn like diagrams. Collaborative and end-to-end encrypted.",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/excalidraw.png",
      "categories": [
        "edge",
        "Web",
        "Productivity",
        "Tools",
        "Drawing"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/excalidraw.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "excalidraw"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5006,
      "type": 3,
      "image": "lissy93/web-check:latest",
      "name": "web-check",
      "title": "Web Check",
      "description": "Web Check give you a comprehensive, on-demand open source intelligence for any website",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/web-check.png",
      "categories": [
        "edge",
        "Tools",
        "Web",
        "Security",
        "OSINT"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/web-check.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "web-check"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5007,
      "type": 3,
      "name": "uptime-kuma",
      "title": "Uptime Kuma",
      "description": "It is a self-hosted monitoring tool like Uptime Robot",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/uptime-kuma.png",
      "categories": [
        "Tools",
        "Web",
        "Monitoring"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/uptime-kuma.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "uptime-kuma"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "HOMEPAGE_ALLOWED_HOSTS",
          "label": "HOMEPAGE_ALLOWED_HOSTS",
          "default": "homepage.localhost"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5008,
      "type": 3,
      "image": "ghcr.io/dgtlmoon/changedetection.io:latest",
      "name": "changedetection-io",
      "title": "ChangeDetection.io",
      "description": "changedetection.io - The best and simplest self-hosted open source website change detection monitoring and notification service. An alternative to Visualping, Watchtower",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/changedetection-io.jpeg",
      "categories": [
        "Network",
        "Web",
        "Tools",
        "Monitoring"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/changedetection-io.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "changedetection-io"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "PORT",
          "label": "PORT",
          "default": "80"
        },
        {
          "name": "LOGGER_LEVEL",
          "label": "LOGGER_LEVEL",
          "default": "INFO"
        },
        {
          "name": "HIDE_REFERER",
          "label": "HIDE_REFERER",
          "default": "true"
        },
        {
          "name": "DISABLE_VERSION_CHECK",
          "label": "DISABLE_VERSION_CHECK",
          "default": "true"
        },
        {
          "name": "TZ",
          "label": "TZ",
          "default": "Australia/Brisbane"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5009,
      "type": 3,
      "name": "elastic-agent",
      "title": "Elastic Agent",
      "description": "Elastic agent",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/elastic-agent.png",
      "categories": [
        "edge",
        "Logs",
        "Tools"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/elastic-agent.yml"
      },
      "env": [
        {
          "name": "IMAGE",
          "label": "IMAGE",
          "default": "docker.elastic.co/elastic-agent/elastic-agent-complete-wolfi:8.18.0"
        },
        {
          "name": "FLEET_ENROLL",
          "label": "FLEET_ENROLL",
          "default": "1"
        },
        {
          "name": "FLEET_URL",
          "label": "FLEET_URL",
          "default": "CHANGE_ME"
        },
        {
          "name": "FLEET_ENROLLMENT_TOKEN",
          "label": "FLEET_ENROLLMENT_TOKEN",
          "default": "CHANGE_ME"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5010,
      "type": 3,
      "name": "elasticsearch",
      "title": "Elasticsearch",
      "description": "Elasticsearch single stand-alone server",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/elasticsearch.png",
      "categories": [
        "Database",
        "Search",
        "Storage"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/elasticsearch.yml"
      },
      "env": [
        {
          "name": "IMAGE",
          "label": "IMAGE",
          "default": "docker.elastic.co/elasticsearch/elasticsearch-wolfi:8.18.0"
        },
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "elasticsearch"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "ES_JAVA_OPTS",
          "label": "ES_JAVA_OPTS",
          "default": "-Xms512m -Xmx512m"
        },
        {
          "name": "ELASTIC_USERNAME",
          "label": "ELASTIC_USERNAME",
          "default": "elastic"
        },
        {
          "name": "ELASTIC_PASSWORD",
          "label": "ELASTIC_PASSWORD",
          "default": "changeme"
        },
        {
          "name": "CORS_ALLOW_ORIGIN",
          "label": "CORS_ALLOW_ORIGIN",
          "default": "http://elasticvue.localhost"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5011,
      "type": 3,
      "name": "logstash",
      "title": "Logstash",
      "description": "Logstash",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/logstash.png",
      "categories": [
        "Logs",
        "Tools"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/logstash.yml"
      },
      "env": [
        {
          "name": "IMAGE",
          "label": "IMAGE",
          "default": "docker.elastic.co/logstash/logstash-wolfi:8.18.0"
        },
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "logstash"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "PIPELINE_ECS__COMPATIBILITY",
          "label": "PIPELINE_ECS__COMPATIBILITY",
          "default": "v8"
        },
        {
          "name": "CONFIG_RELOAD_AUTOMATIC",
          "label": "CONFIG_RELOAD_AUTOMATIC",
          "default": "true"
        },
        {
          "name": "CONFIG_RELOAD_INTERVAL",
          "label": "CONFIG_RELOAD_INTERVAL",
          "default": "30s"
        },
        {
          "name": "QUEUE_TYPE",
          "label": "QUEUE_TYPE",
          "default": "persisted"
        },
        {
          "name": "QUEUE_PATH",
          "label": "QUEUE_PATH",
          "default": "/usr/share/logstash/data/queue"
        },
        {
          "name": "QUEUE_MAX__EVENTS",
          "label": "QUEUE_MAX__EVENTS",
          "default": "5000"
        },
        {
          "name": "QUEUE_MAX__BYTES",
          "label": "QUEUE_MAX__BYTES",
          "default": "1024mb"
        },
        {
          "name": "QUEUE_DRAIN",
          "label": "QUEUE_DRAIN",
          "default": "true"
        },
        {
          "name": "QUEUE_DRAIN_TIMEOUT",
          "label": "QUEUE_DRAIN_TIMEOUT",
          "default": "30s"
        },
        {
          "name": "API_AUTH_TYPE",
          "label": "API_AUTH_TYPE",
          "default": "basic"
        },
        {
          "name": "API_AUTH_BASIC_USERNAME",
          "label": "API_AUTH_BASIC_USERNAME",
          "default": "admin"
        },
        {
          "name": "API_AUTH_BASIC_PASSWORD",
          "label": "API_AUTH_BASIC_PASSWORD",
          "default": "CHANGE_ME"
        },
        {
          "name": "API_HTTP_PORT",
          "label": "API_HTTP_PORT",
          "default": "9600"
        },
        {
          "name": "LOG_FORMAT",
          "label": "LOG_FORMAT",
          "default": "json"
        },
        {
          "name": "LOG_LEVEL",
          "label": "LOG_LEVEL",
          "default": "info"
        },
        {
          "name": "XPACK_MANAGEMENT_ENABLED",
          "label": "XPACK_MANAGEMENT_ENABLED",
          "default": "false"
        },
        {
          "name": "XPACK_MANAGEMENT_ELASTICSEARCH_HOSTS",
          "label": "XPACK_MANAGEMENT_ELASTICSEARCH_HOSTS",
          "default": "http://localhost:9200/"
        },
        {
          "name": "XPACK_MANAGEMENT_ELASTICSEARCH_USERNAME",
          "label": "XPACK_MANAGEMENT_ELASTICSEARCH_USERNAME",
          "default": "logstash_admin_user"
        },
        {
          "name": "XPACK_MANAGEMENT_ELASTICSEARCH_PASSWORD",
          "label": "XPACK_MANAGEMENT_ELASTICSEARCH_PASSWORD",
          "default": "t0p.s3cr3t"
        },
        {
          "name": "XPACK_MANAGEMENT_LOGSTASH_POLL_INTERVAL",
          "label": "XPACK_MANAGEMENT_LOGSTASH_POLL_INTERVAL",
          "default": "30s"
        },
        {
          "name": "XPACK_MANAGEMENT_PIPELINE_ID",
          "label": "XPACK_MANAGEMENT_PIPELINE_ID",
          "default": "[\"apache\", \"cloudwatch_logs\"]"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 5012,
      "type": 3,
      "name": "elastivue",
      "title": "Elasticvue",
      "description": "The elasticsearch GUI that you deserve.",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/elasticvue.png",
      "categories": [
        "Database",
        "Tools"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/elasticvue.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "elasticvue"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "ELASTICVUE_CLUSTERS",
          "label": "ELASTICVUE_CLUSTERS",
          "default": "[{\"name\":\"local\",\"uri\":\"https://elasticsearch.localhost\",\"username\":\"elastic\",\"password\":\"changeme\"}]"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 10000,
      "type": 3,
      "name": "ollama",
      "title": "Ollama",
      "description": "Ollama",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/ollama.png",
      "categories": [
        "edge",
        "AI"
      ],
      "repository": {
        "url": "https://github.com//colin-stubbs/portainer-templates",
        "stackfile": "stacks/ollama.yml"
      },
      "env": [
        {
          "name": "OLLAMA_MAX_LOADED_MODELS",
          "label": "OLLAMA_MAX_LOADED_MODELS",
          "default": "1"
        },
        {
          "name": "HSA_OVERRIDE_GFX_VERSION",
          "label": "HSA_OVERRIDE_GFX_VERSION"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 10001,
      "type": 3,
      "name": "ollama-rocm",
      "title": "Ollama (ROCM)",
      "description": "Ollama with ROCM for AMD GPU's",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/ollama.png",
      "categories": [
        "edge",
        "AI"
      ],
      "repository": {
        "url": "https://github.com//colin-stubbs/portainer-templates",
        "stackfile": "stacks/ollama-rocm.yml"
      },
      "env": [
        {
          "name": "OLLAMA_MAX_LOADED_MODELS",
          "label": "OLLAMA_MAX_LOADED_MODELS",
          "default": "1"
        },
        {
          "name": "HSA_OVERRIDE_GFX_VERSION",
          "label": "HSA_OVERRIDE_GFX_VERSION"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 10003,
      "type": 3,
      "image": "searxng/searxng:latest",
      "name": "searxng",
      "title": "SearXNG",
      "description": "SearXNG is a free internet metasearch engine which aggregates results from various search services and databases. Users are neither tracked nor profiled.",
      "note": "TBC",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/searxng.png",
      "categories": [
        "edge",
        "Web",
        "Search"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/searxng.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "searxng"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "SEARXNG_HOSTNAME",
          "label": "SEARXNG_HOSTNAME",
          "default": "searxng.localhost"
        },
        {
          "name": "SEARXNG_BASE_URL",
          "label": "SEARXNG_BASE_URL",
          "default": "https://searxng.localhost/"
        },
        {
          "name": "SEARXNG_URL",
          "label": "SEARXNG_URL",
          "default": "/"
        },
        {
          "name": "SEARXNG_SECRET",
          "label": "SEARXNG_SECRET",
          "description": "Crucial for secure operation and should be a randomly generated, unique string.",
          "default": "CHANGE_ME"
        },
        {
          "name": "SEARXNG_BIND_ADDRESS",
          "label": "SEARXNG_BIND_ADDRESS",
          "default": "0.0.0.0"
        },
        {
          "name": "SEARXNG_PORT",
          "label": "SEARXNG_PORT",
          "default": "80"
        },
        {
          "name": "UWSGI_WORKERS",
          "label": "UWSGI_WORKERS",
          "default": "4"
        },
        {
          "name": "UWSGI_THREADS",
          "label": "UWSGI_THREADS",
          "default": "4"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 10004,
      "type": 3,
      "name": "open-webui",
      "title": "Open WebUI",
      "description": "Open WebUI is an extensible, feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline. It supports various LLM runners like Ollama and OpenAI-compatible APIs, with built-in inference engine for RAG, making it a powerful AI deployment solution.",
      "note": "TBC",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/open-webui.png",
      "categories": [
        "Web",
        "AI"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/open-webui.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "open-webui"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "OLLAMA_BASE_URL",
          "label": "OLLAMA_BASE_URL",
          "default": "http://host.docker.internal:11434"
        },
        {
          "name": "ENABLE_RAG_WEB_SEARCH",
          "label": "ENABLE_RAG_WEB_SEARCH",
          "default": "true"
        },
        {
          "name": "RAG_WEB_SEARCH_ENGINE",
          "label": "RAG_WEB_SEARCH_ENGINE",
          "default": "searxng"
        },
        {
          "name": "RAG_WEB_SEARCH_RESULT_COUNT",
          "label": "RAG_WEB_SEARCH_RESULT_COUNT",
          "default": "3"
        },
        {
          "name": "RAG_WEB_SEARCH_CONCURRENT_REQUEST",
          "label": "RAG_WEB_SEARCH_CONCURRENT_REQUEST",
          "default": "10"
        },
        {
          "name": "SEARXNG_QUERY_URL",
          "label": "SEARXNG_QUERY_URL",
          "default": "http://searxng/search?q=<query>"
        },
        {
          "name": "OAUTH_MERGE_ACCOUNTS_BY_EMAIL",
          "label": "OAUTH_MERGE_ACCOUNTS_BY_EMAIL",
          "default": "false"
        },
        {
          "name": "WEBUI_SECRET_KEY",
          "label": "WEBUI_SECRET_KEY",
          "default": "CHANGE_ME"
        },
        {
          "name": "USE_CUDA_DOCKER",
          "label": "USE_CUDA_DOCKER",
          "default": "false"
        },
        {
          "name": "DATABASE_URL",
          "label": "DATABASE_URL",
          "default": "postgresql://postgres:CHANGE_ME@postgres:5432/postgres"
        }
      ],
      "maintainer": "https://github.com/colin-stubbs/portainer-templates/"
    },
    {
      "id": 10005,
      "type": 3,
      "name": "gophish",
      "title": "GoPhish",
      "description": "Open-Source Phishing Toolkit",
      "note": "TBC",
      "logo": "https://raw.githubusercontent.com/colin-stubbs/portainer-templates/refs/heads/main/images/gophish.png",
      "categories": [
        "Web",
        "Email",
        "Security"
      ],
      "repository": {
        "url": "https://github.com/colin-stubbs/portainer-templates/",
        "stackfile": "stacks/gophish.yml"
      },
      "env": [
        {
          "name": "NETWORK",
          "label": "NETWORK",
          "description": "Which existing user defined network to connect the container too. Note that 'bridge' will not work.",
          "default": "localnet"
        },
        {
          "name": "HOSTNAME",
          "label": "HOSTNAME",
          "default": "gophish"
        },
        {
          "name": "DOMAINNAME",
          "label": "DOMAINNAME",
          "default": "localhost"
        },
        {
          "name": "GOPHISH_INITIAL_ADMIN_PASSWORD",
          "label": "GOPHISH_INITIAL_ADMIN_PASSWORD",
          "default": "CHANGE_ME"
        },
        {
          "name": "ADMIN_LISTEN_URL",
          "label": "ADMIN_LISTEN_URL",
          "default": "0.0.0.0:3333"
        },
        {
          "name": "ADMIN_USE_TLS",
          "label": "ADMIN_USE_TLS",
          "default": "false"
        },
        {
          "name": "ADMIN_CERT_PATH",
          "label": "ADMIN_CERT_PATH",
          "default": "gophish_admin.crt"
        },
        {
          "name": "ADMIN_KEY_PATH",
          "label": "ADMIN_KEY_PATH",
          "default": "gophish_admin.key"
        },
        {
          "name": "ADMIN_TRUSTED_ORIGINS",
          "label": "ADMIN_TRUSTED_ORIGINS",
          "default": "http://gophish-admin.localhost"
        },
        {
          "name": "PHISH_LISTEN_URL",
          "label": "PHISH_LISTEN_URL",
          "default": "0.0.0.0:80"
        },
        {
          "name": "PHISH_USE_TLS",
          "label": "PHISH_USE_TLS",
          "default": "false"
        },
        {
          "name": "PHISH_CERT_PATH",
          "label": "PHISH_CERT_PATH",
          "default": "example.crt"
        },
        {
          "name": "PHISH_KEY_PATH",
          "label": "PHISH_KEY_PATH",
          "default": "example.key"
        },
        {
          "name": "CONTACT_ADDRESS",
          "label": "CONTACT_ADDRESS",
          "default": "CHANGE@ME.tld"
        },
        {
          "name": "DB_NAME",
          "label": "DB_NAME",
          "default": "sqlite3"
        },
        {
          "name": "DB_FILE_PATH",
          "label": "DB_FILE_PATH",
          "default": "gophish.db"
        }
      ],
      "maintainer": " https://github.com/colin-stubbs/portainer-templates/"
    }
  ]
}