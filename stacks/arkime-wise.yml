networks:
  network:
    name: ${NETWORK:-localnet}
    external: true

services:
  arkime:
    image: ${IMAGE:-ghcr.io/arkime/arkime/arkime:v5-latest}
    hostname: ${HOSTNAME:-arkime-wise}
    domainname: ${DOMAINNAME:-localhost}
    # custom string of commands to support config.ini file if it is missing
    ### NOTE: You will probably need to use --insecure for most self-hosted Elasticsearch HTTPS interfaces, but don't use it if you don't need it, e.g. if you can access ES via a HTTPS URL with a commonly trusted public CA signed certificate or if you have setup private CA trust via another means.
    ### NOTE: Web config requires a code to make changes, this is by default randomly generated, add '--webcode <code>' to set it to a specific value, otherwise consult the container logs to determine what it is.
    command: /bin/bash -l -c 'mkdir -p /opt/arkime/etc && touch /opt/arkime/etc/wiseService.ini && /opt/arkime/bin/docker.sh wise --webconfig'
    restart: unless-stopped
    environment:
      - TZ=${TZ:-Australia/Brisbane}
      ### Refer to https://arkime.com/settings for complete reference.
      #- ARKIME__<config>=<value>
      #- ARKIME_<section>__<config>=<value>
      - ARKIME_wiseService__port=${ARKIME_wiseService__port:-80}
      - ARKIME_wiseService__authMode=${ARKIME_wiseService__authMode:-digest}
      - ARKIME_wiseService__usersElasticsearch=${ARKIME_wiseService__usersElasticsearch:-http://elastic:changeme@elasticsearch:9200}
      - ARKIME_cache__type=${ARKIME_cache__type:-memory} # memory or redis
      #- ARKIME_cache__url=${ARKIME_cache__url:-redis://user:password@host:port/db-number}
    networks:
      network:
    #volumes:
      #- etc:/opt/arkime/etc
      #- ${DATA_DIR:-/opt/data/portainer/config/arkime}/wiseService.ini:/opt/arkime/etc/wiseService.ini
      # /usr/share/GeoIP:/usr/share/GeoIP
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.arkime_wise.rule=Host(`${HOSTNAME:-arkime-wise}.${DOMAINNAME:-localhost}`)"
      - "traefik.http.services.arkime_wise.loadbalancer.server.port=${ARKIME_wiseService__port:-80}"
      - "com.centurylinklabs.watchtower.enable=true"
      - "wud.watch=true"
      - "io.containers.autoupdate=registry"

#volumes:
#  etc:
